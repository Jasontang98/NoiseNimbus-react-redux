{"ast":null,"code":"var _jsxFileName = \"/home/jasontang/noiseNimbus/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Route, Switch } from \"react-router-dom\";\nimport * as sessionActions from \"./store/session\";\nimport Navigation from \"./components/Navigation\";\nimport \"./index.css\";\nimport AudioPlayer from \"react-h5-audio-player\";\nimport \"react-h5-audio-player/lib/styles.css\";\nimport Splash from \"./components/SplashPage/Splash\";\nimport SongsPage from \"./components/SongPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const dispatch = useDispatch();\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [song, setSong] = useState(\"\");\n  const [playlist, setPlaylist] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [currentSongName, setCurrentSongName] = useState(\"No Songs Currently Playing\");\n  const player = useRef();\n  useEffect(() => {\n    dispatch(sessionActions.restoreUser()).then(() => setIsLoaded(true));\n  }, [dispatch]);\n\n  const oneSong = async singleSong => {\n    setCurrentSongName(singleSong.title);\n    await setSong(`${singleSong.songUrl}`);\n    setPlaylist([]);\n    player.current.song.current.play(song);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {\n      isLoaded: isLoaded\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), isLoaded && /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        children: /*#__PURE__*/_jsxDEV(Splash, {\n          oneSong: oneSong\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/songs\",\n        children: [/*#__PURE__*/_jsxDEV(SongsPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(AudioPlayer, {\n          id: \"musicPlayer\",\n          src: `${song}`,\n          onPlay: e => console.log(\"Playing\"),\n          ref: player,\n          volume: 0.1,\n          layout: \"horizontal-reverse\",\n          showSkipControls: true,\n          showJumpControls: false,\n          autoPlayAfterSrcChange: true,\n          header: `Playing: ${currentSongName}`,\n          customAdditionalControls: []\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        children: \"Page Not Found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"Y2V+5UOXZTItGCYQK6WuPEC0QK8=\", false, function () {\n  return [useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useDispatch","Route","Switch","sessionActions","Navigation","AudioPlayer","Splash","SongsPage","App","dispatch","isLoaded","setIsLoaded","song","setSong","playlist","setPlaylist","currentIndex","setCurrentIndex","currentSongName","setCurrentSongName","player","restoreUser","then","oneSong","singleSong","title","songUrl","current","play","e","console","log"],"sources":["/home/jasontang/noiseNimbus/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Route, Switch } from \"react-router-dom\";\nimport * as sessionActions from \"./store/session\";\nimport Navigation from \"./components/Navigation\";\nimport \"./index.css\";\n\nimport AudioPlayer from \"react-h5-audio-player\";\nimport \"react-h5-audio-player/lib/styles.css\";\n\nimport Splash from \"./components/SplashPage/Splash\";\nimport SongsPage from \"./components/SongPage\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  const [song, setSong] = useState(\"\");\n  const [playlist, setPlaylist] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [currentSongName, setCurrentSongName] = useState(\n    \"No Songs Currently Playing\"\n  );\n  const player = useRef();\n\n  useEffect(() => {\n    dispatch(sessionActions.restoreUser()).then(() => setIsLoaded(true));\n  }, [dispatch]);\n\n  const oneSong = async (singleSong) => {\n    setCurrentSongName(singleSong.title);\n    await setSong(`${singleSong.songUrl}`);\n    setPlaylist([]);\n    player.current.song.current.play(song);\n  };\n\n  return (\n    <>\n      <Navigation isLoaded={isLoaded} />\n      {isLoaded && (\n        <Switch>\n          <Route exact path='/'>\n            <Splash oneSong={oneSong}/>\n          </Route>\n          <Route path='/songs'>\n            <SongsPage />\n            <AudioPlayer\n            id=\"musicPlayer\"\n            src={`${song}`}\n            onPlay={(e) => console.log(\"Playing\")}\n            ref={player}\n            volume={0.1}\n            layout=\"horizontal-reverse\"\n            showSkipControls={true}\n            showJumpControls={false}\n            autoPlayAfterSrcChange={true}\n            header={`Playing: ${currentSongName}`}\n            customAdditionalControls={[]}\n          />\n          </Route>\n          <Route >\n            Page Not Found\n          </Route>\n        </Switch>\n     )}\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,OAAO,KAAKC,cAAZ,MAAgC,iBAAhC;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,aAAP;AAEA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAO,sCAAP;AAEA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAMC,QAAQ,GAAGT,WAAW,EAA5B;EACA,MAAM,CAACU,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,KAAD,CAAxC;EAEA,MAAM,CAACe,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACiB,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACmB,YAAD,EAAeC,eAAf,IAAkCpB,QAAQ,CAAC,CAAD,CAAhD;EACA,MAAM,CAACqB,eAAD,EAAkBC,kBAAlB,IAAwCtB,QAAQ,CACpD,4BADoD,CAAtD;EAGA,MAAMuB,MAAM,GAAGrB,MAAM,EAArB;EAEAD,SAAS,CAAC,MAAM;IACdW,QAAQ,CAACN,cAAc,CAACkB,WAAf,EAAD,CAAR,CAAuCC,IAAvC,CAA4C,MAAMX,WAAW,CAAC,IAAD,CAA7D;EACD,CAFQ,EAEN,CAACF,QAAD,CAFM,CAAT;;EAIA,MAAMc,OAAO,GAAG,MAAOC,UAAP,IAAsB;IACpCL,kBAAkB,CAACK,UAAU,CAACC,KAAZ,CAAlB;IACA,MAAMZ,OAAO,CAAE,GAAEW,UAAU,CAACE,OAAQ,EAAvB,CAAb;IACAX,WAAW,CAAC,EAAD,CAAX;IACAK,MAAM,CAACO,OAAP,CAAef,IAAf,CAAoBe,OAApB,CAA4BC,IAA5B,CAAiChB,IAAjC;EACD,CALD;;EAOA,oBACE;IAAA,wBACE,QAAC,UAAD;MAAY,QAAQ,EAAEF;IAAtB;MAAA;MAAA;MAAA;IAAA,QADF,EAEGA,QAAQ,iBACP,QAAC,MAAD;MAAA,wBACE,QAAC,KAAD;QAAO,KAAK,MAAZ;QAAa,IAAI,EAAC,GAAlB;QAAA,uBACE,QAAC,MAAD;UAAQ,OAAO,EAAEa;QAAjB;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF,eAIE,QAAC,KAAD;QAAO,IAAI,EAAC,QAAZ;QAAA,wBACE,QAAC,SAAD;UAAA;UAAA;UAAA;QAAA,QADF,eAEE,QAAC,WAAD;UACA,EAAE,EAAC,aADH;UAEA,GAAG,EAAG,GAAEX,IAAK,EAFb;UAGA,MAAM,EAAGiB,CAAD,IAAOC,OAAO,CAACC,GAAR,CAAY,SAAZ,CAHf;UAIA,GAAG,EAAEX,MAJL;UAKA,MAAM,EAAE,GALR;UAMA,MAAM,EAAC,oBANP;UAOA,gBAAgB,EAAE,IAPlB;UAQA,gBAAgB,EAAE,KARlB;UASA,sBAAsB,EAAE,IATxB;UAUA,MAAM,EAAG,YAAWF,eAAgB,EAVpC;UAWA,wBAAwB,EAAE;QAX1B;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QAJF,eAoBE,QAAC,KAAD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QApBF;IAAA;MAAA;MAAA;MAAA;IAAA,QAHJ;EAAA,gBADF;AA+BD;;GAtDQV,G;UACUR,W;;;KADVQ,G;AAwDT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}