{"ast":null,"code":"var _jsxFileName = \"/home/jasontang/noiseNimbus/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Route, Switch } from \"react-router-dom\";\nimport * as sessionActions from \"./store/session\";\nimport { playAllSongs } from \"./store/songFile\";\nimport Navigation from \"./components/Navigation\";\nimport \"./index.css\";\nimport AudioPlayer from \"react-h5-audio-player\";\nimport \"react-h5-audio-player/lib/styles.css\";\nimport Splash from \"./components/SplashPage/Splash\";\nimport SongsPage from \"./components/SongPage\";\nimport UploadSong from \"./components/UploadPage\";\nimport EditSong from \"./components/EditSongPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const dispatch = useDispatch();\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [song, setSong] = useState(\"\");\n  const [currentSong, setCurrentSong] = useState(\"\");\n  const musicPlayer = useRef();\n  useEffect(() => {\n    dispatch(playAllSongs());\n    dispatch(sessionActions.restoreUser()).then(() => setIsLoaded(true));\n  }, [dispatch]);\n\n  const playSong = async singleSong => {\n    setCurrentSong(singleSong.title);\n    await setSong(`${singleSong.url}`);\n    musicPlayer.current.audio.current.play(song);\n  };\n\n  return isLoaded && /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {\n      isLoaded: isLoaded\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        children: /*#__PURE__*/_jsxDEV(Splash, {\n          playSong: playSong\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/songs\",\n        children: /*#__PURE__*/_jsxDEV(SongsPage, {\n          playSong: playSong\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/upload\",\n        children: /*#__PURE__*/_jsxDEV(UploadSong, {\n          playSong: playSong\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/songs/:id\",\n        children: /*#__PURE__*/_jsxDEV(EditSong, {\n          playSong: playSong\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        children: \"Page Not Found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: /*#__PURE__*/_jsxDEV(AudioPlayer, {\n        ref: musicPlayer,\n        volume: 0.1,\n        onPlay: e => console.log(`${currentSong}`),\n        src: `${song}`,\n        layout: \"horizontal-reverse\",\n        showSkipControls: true,\n        showJumpControls: false,\n        autoPlayAfterSrcChange: true,\n        header: `${currentSong}`,\n        customAdditionalControls: []\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"/NQ8swPr8AEc9T1jo+J4EosVt6c=\", false, function () {\n  return [useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useDispatch","Route","Switch","sessionActions","playAllSongs","Navigation","AudioPlayer","Splash","SongsPage","UploadSong","EditSong","App","dispatch","isLoaded","setIsLoaded","song","setSong","currentSong","setCurrentSong","musicPlayer","restoreUser","then","playSong","singleSong","title","url","current","audio","play","e","console","log"],"sources":["/home/jasontang/noiseNimbus/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Route, Switch } from \"react-router-dom\";\nimport * as sessionActions from \"./store/session\";\nimport { playAllSongs } from \"./store/songFile\";\nimport Navigation from \"./components/Navigation\";\nimport \"./index.css\";\n\nimport AudioPlayer from \"react-h5-audio-player\";\nimport \"react-h5-audio-player/lib/styles.css\";\n\nimport Splash from \"./components/SplashPage/Splash\";\nimport SongsPage from \"./components/SongPage\";\nimport UploadSong from \"./components/UploadPage\";\nimport EditSong from \"./components/EditSongPage\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  const [song, setSong] = useState(\"\");\n  const [currentSong, setCurrentSong] = useState(\"\");\n\n  const musicPlayer = useRef();\n\n  useEffect(() => {\n    dispatch(playAllSongs());\n    dispatch(sessionActions.restoreUser()).then(() => setIsLoaded(true));\n  }, [dispatch]);\n\n  const playSong = async (singleSong) => {\n    setCurrentSong(singleSong.title);\n    await setSong(`${singleSong.url}`);\n    musicPlayer.current.audio.current.play(song);\n  };\n\n\n  return (\n    isLoaded && (\n      <>\n\n      <Navigation isLoaded={isLoaded} />\n      <Switch>\n          <Route exact path='/'>\n            <Splash playSong={playSong}/>\n          </Route>\n          <Route exact path='/songs'>\n            <SongsPage playSong={playSong}/>\n          </Route>\n          <Route path=\"/upload\">\n            <UploadSong playSong={playSong} />\n          </Route>\n          <Route path=\"/songs/:id\">\n            <EditSong playSong={playSong}/>\n          </Route>\n          <Route >\n            Page Not Found\n          </Route>\n        </Switch>\n        <footer >\n           <AudioPlayer\n            ref={musicPlayer}\n            volume={0.1}\n            onPlay={(e) => console.log(`${currentSong}`)}\n            src={`${song}`}\n            layout=\"horizontal-reverse\"\n            showSkipControls={true}\n            showJumpControls={false}\n            autoPlayAfterSrcChange={true}\n            header={`${currentSong}`}\n            customAdditionalControls={[]}\n          />\n        </footer>\n      </>\n     )\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}