{"ast":null,"code":"var _jsxFileName = \"/home/jasontang/noiseNimbus/frontend/src/components/UploadPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport { playAllSongs, addNewSong } from \"../store/songFile\";\nimport Navigation from \"./Navigation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction UploadSong() {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const sessionUser = useSelector(state => state.session.user);\n  const [file, setFile] = useState(null);\n  const [fileName, setFileName] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  if (!sessionUser) return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 30\n  }, this);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setErrors([]);\n    const userId = sessionUser.id;\n    const payload = {\n      userId,\n      fileName,\n      file\n    };\n    const createNewSong = await dispatch(addNewSong(payload)).catch(async res => {\n      const data = await res.json();\n\n      if (data && data.errors) {\n        setErrors(data.errors);\n      } else if (data && data.message) {\n        setErrors([data.message]);\n      }\n    });\n    isLoaded(true);\n\n    if (createNewSong) {\n      await dispatch(playAllSongs());\n      history.push('/songs'); //needs to be changed\n    }\n  };\n\n  const handleChange = async e => {\n    const uploadFile = e.target.files[0];\n    setFile(uploadFile);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoaded && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navigation, {\n        isLoaded: isLoaded\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"songForm\",\n          onSubmit: handleSubmit,\n          children: [errors.map(error => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: error\n          }, error, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Song Title\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: fileName,\n              required: true,\n              onChange: e => setFileName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Select a Song\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Please add a mp3/mp4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              name: \"song\",\n              onChange: handleChange,\n              accept: \".mp3, .mp4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(UploadSong, \"/Zzb04I2B1Umo8zNWPSgNqRojfI=\", false, function () {\n  return [useDispatch, useHistory, useSelector];\n});\n\n_c = UploadSong;\nexport default UploadSong;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadSong\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","Redirect","useHistory","playAllSongs","addNewSong","Navigation","UploadSong","dispatch","history","sessionUser","state","session","user","file","setFile","fileName","setFileName","errors","setErrors","isLoaded","setIsLoaded","handleSubmit","e","preventDefault","userId","id","payload","createNewSong","catch","res","data","json","message","push","handleChange","uploadFile","target","files","map","error","value"],"sources":["/home/jasontang/noiseNimbus/frontend/src/components/UploadPage.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport { playAllSongs, addNewSong } from \"../store/songFile\";\nimport Navigation from \"./Navigation\";\n\nfunction UploadSong() {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const sessionUser = useSelector(state => state.session.user);\n\n    const [file, setFile] = useState(null);\n    const [fileName, setFileName] = useState(\"\");\n    const [errors, setErrors] = useState([]);\n    const [isLoaded, setIsLoaded] = useState(false)\n    if (!sessionUser) return <Redirect to='/' />;\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setErrors([]);\n        const userId = sessionUser.id;\n        const payload = {\n            userId,\n            fileName,\n            file\n        };\n        const createNewSong = await dispatch(addNewSong(payload)).catch(\n            async (res) => {\n                const data = await res.json();\n                if (data && data.errors) {\n                    setErrors(data.errors);\n                } else if (data && data.message) {\n                    setErrors([data.message]);\n                }\n            }\n        );\n        isLoaded(true)\n        if (createNewSong) {\n            await dispatch(playAllSongs());\n            history.push('/songs') //needs to be changed\n        }\n    };\n\n    const handleChange = async (e) => {\n        const uploadFile = e.target.files[0];\n        setFile(uploadFile)\n    }\n\n\n    return (\n        <>\n        {isLoaded && (\n            <div>\n                <Navigation isLoaded={isLoaded}/>\n                <div>\n                <form className=\"songForm\" onSubmit={handleSubmit}>\n                    {errors.map((error) => (\n                        <div key={error}>{error}</div>\n                    ))}\n                    <label>\n                        Song Title\n                        <input\n                            type=\"text\"\n                            value={fileName}\n                            required\n                            onChange={(e) => setFileName(e.target.value)}\n                        />\n                    </label>\n                    <div>\n                        <div>Select a Song</div>\n                        <p>Please add a mp3/mp4</p>\n                        <input\n                            type=\"file\"\n                            name=\"song\"\n                            onChange={handleChange}\n                            accept=\".mp3, .mp4\"\n                        />\n                    </div>\n                    <div>\n                        <button type=\"submit\">\n                            Submit\n                        </button>\n                    </div>\n                </form>\n                </div>\n            </div>\n        )}\n        </>\n    );\n}\n\nexport default UploadSong;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}