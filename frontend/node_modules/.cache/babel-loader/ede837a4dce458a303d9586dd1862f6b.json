{"ast":null,"code":"var _jsxFileName = \"/home/jasontang/noiseNimbus/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Route, Switch } from \"react-router-dom\";\nimport * as sessionActions from \"./store/session\";\nimport { playAllSongs } from \"./store/songFile\";\nimport Navigation from \"./components/Navigation\";\nimport \"./index.css\";\nimport AudioPlayer from \"react-h5-audio-player\";\nimport \"react-h5-audio-player/lib/styles.css\";\nimport Splash from \"./components/SplashPage/Splash\";\nimport SongsPage from \"./components/SongPage\";\nimport UploadSong from \"./components/UploadPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const dispatch = useDispatch();\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [song, setSong] = useState(\"\");\n  const [playlist, setPlaylist] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [currentSongName, setCurrentSongName] = useState(\"No Songs Currently Playing\");\n  const player = useRef();\n  useEffect(() => {\n    dispatch(playAllSongs());\n    dispatch(sessionActions.restoreUser()).then(() => setIsLoaded(true));\n  }, [dispatch]);\n\n  const playSong = async singleSong => {\n    setCurrentSongName(singleSong.title);\n    await setSong(`${singleSong.url}`);\n    setPlaylist([]);\n    player.current.song.current.play(song);\n  };\n\n  return isLoaded && /*#__PURE__*/_jsxDEV(Switch, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/\",\n      children: /*#__PURE__*/_jsxDEV(Splash, {\n        playSong: playSong\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/songs\",\n      children: [/*#__PURE__*/_jsxDEV(SongsPage, {\n        playSong: playSong\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(AudioPlayer, {\n        id: \"musicPlayer\",\n        src: `${song}`,\n        onPlay: e => console.log(\"Playing\"),\n        ref: player,\n        volume: 0.05,\n        layout: \"horizontal-reverse\",\n        showSkipControls: true,\n        showJumpControls: false,\n        autoPlayAfterSrcChange: true,\n        header: `Playing: ${currentSongName}`,\n        customAdditionalControls: []\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"upload\",\n      children: /*#__PURE__*/_jsxDEV(UploadSong, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      children: \"Page Not Found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"Y2V+5UOXZTItGCYQK6WuPEC0QK8=\", false, function () {\n  return [useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useDispatch","Route","Switch","sessionActions","playAllSongs","Navigation","AudioPlayer","Splash","SongsPage","UploadSong","App","dispatch","isLoaded","setIsLoaded","song","setSong","playlist","setPlaylist","currentIndex","setCurrentIndex","currentSongName","setCurrentSongName","player","restoreUser","then","playSong","singleSong","title","url","current","play","e","console","log"],"sources":["/home/jasontang/noiseNimbus/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Route, Switch } from \"react-router-dom\";\nimport * as sessionActions from \"./store/session\";\nimport { playAllSongs } from \"./store/songFile\";\nimport Navigation from \"./components/Navigation\";\nimport \"./index.css\";\n\nimport AudioPlayer from \"react-h5-audio-player\";\nimport \"react-h5-audio-player/lib/styles.css\";\n\nimport Splash from \"./components/SplashPage/Splash\";\nimport SongsPage from \"./components/SongPage\";\nimport UploadSong from \"./components/UploadPage\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  const [song, setSong] = useState(\"\");\n  const [playlist, setPlaylist] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [currentSongName, setCurrentSongName] = useState(\n    \"No Songs Currently Playing\"\n  );\n  const player = useRef();\n\n  useEffect(() => {\n    dispatch(playAllSongs());\n    dispatch(sessionActions.restoreUser()).then(() => setIsLoaded(true));\n  }, [dispatch]);\n\n  const playSong = async (singleSong) => {\n    setCurrentSongName(singleSong.title);\n    await setSong(`${singleSong.url}`);\n    setPlaylist([]);\n    player.current.song.current.play(song);\n  };\n\n  return (\n\n      isLoaded && (\n        <Switch>\n          <Route exact path='/'>\n            <Splash playSong={playSong}/>\n          </Route>\n          <Route path='/songs'>\n            <SongsPage playSong={playSong}/>\n            <AudioPlayer\n            id=\"musicPlayer\"\n            src={`${song}`}\n            onPlay={(e) => console.log(\"Playing\")}\n            ref={player}\n            volume={0.05}\n            layout=\"horizontal-reverse\"\n            showSkipControls={true}\n            showJumpControls={false}\n            autoPlayAfterSrcChange={true}\n            header={`Playing: ${currentSongName}`}\n            customAdditionalControls={[]}\n          />\n          </Route>\n          <Route path=\"upload\">\n            <UploadSong />\n          </Route>\n          <Route >\n            Page Not Found\n          </Route>\n        </Switch>\n     )\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}