{"ast":null,"code":"var _jsxFileName = \"/home/jasontang/noiseNimbus/frontend/src/components/EditSongPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect, useHistory, useParams } from \"react-router-dom\";\nimport { editCurrentSong, deleteCurrentSong } from \"../store/songFile\";\nimport { getAllComments, createComment, removeComment } from \"../store/comment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction EditSong() {\n  _s();\n\n  const sessionUser = useSelector(state => state.session.user);\n  const dispatch = useDispatch();\n  const songId = useParams().id;\n  const song = useSelector(state => state.songFile[songId]);\n  const [title, setTitle] = useState(`${song.title}`);\n  const comments = useSelector(state => state.song.Comments);\n  console.log(comments); // const [comment]\n\n  const history = useHistory();\n  if (!sessionUser) return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 30\n  }, this);\n\n  const handleComment = async e => {\n    e.preventDefault();\n    const data = {\n      sessionUser\n    };\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const data = {\n      id: song === null || song === void 0 ? void 0 : song.id,\n      title\n    };\n    await dispatch(editCurrentSong(data));\n    history.push(`/songs`);\n  };\n\n  const handleDelete = song => {\n    dispatch(deleteCurrentSong(song));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: song === null || song === void 0 ? void 0 : song.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: title,\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => handleDelete(song),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: Object.values()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(EditSong, \"JekZfppKgLc9xyraNBvAsy40kRQ=\", false, function () {\n  return [useSelector, useDispatch, useParams, useSelector, useSelector, useHistory];\n});\n\n_c = EditSong;\nexport default EditSong;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditSong\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","Redirect","useHistory","useParams","editCurrentSong","deleteCurrentSong","getAllComments","createComment","removeComment","EditSong","sessionUser","state","session","user","dispatch","songId","id","song","songFile","title","setTitle","comments","Comments","console","log","history","handleComment","e","preventDefault","data","handleSubmit","push","handleDelete","target","value","Object","values"],"sources":["/home/jasontang/noiseNimbus/frontend/src/components/EditSongPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect, useHistory, useParams } from \"react-router-dom\";\nimport { editCurrentSong, deleteCurrentSong } from \"../store/songFile\"\n\nimport { getAllComments, createComment, removeComment } from \"../store/comment\"\n\n\nfunction EditSong() {\n    const sessionUser = useSelector((state) => state.session.user);\n\n    const dispatch = useDispatch();\n    const songId = useParams().id;\n\n    const song = useSelector((state) => state.songFile[songId]);\n\n\n    const [title, setTitle] = useState(`${song.title}`);\n\n    const comments = useSelector((state) => state.song.Comments);\n    console.log(comments)\n    // const [comment]\n\n    const history = useHistory();\n\n    if (!sessionUser) return <Redirect to='/' />;\n\n    const handleComment = async (e) => {\n        e.preventDefault();\n        const data = {\n            sessionUser,\n\n        }\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        const data = {\n            id: song?.id,\n            title\n        };\n\n        await dispatch(editCurrentSong(data));\n        history.push(`/songs`)\n    }\n\n    const handleDelete = (song) => {\n        dispatch(deleteCurrentSong(song))\n    }\n\n\n    return (\n        <>\n            <div>\n                <p>{song?.title}</p>\n                <form onSubmit={handleSubmit}>\n                    <input\n                        type=\"text\"\n                        value={title}\n                        onChange={(e) => setTitle(e.target.value)}\n                    />\n                    <button type=\"submit\">Submit</button>\n                </form>\n                <button\n                onClick={(e) => handleDelete(song)}\n                >Delete\n                </button>\n            </div>\n            <div>\n            {Object.values()}\n            </div>\n        </>\n        )\n}\n\n\nexport default EditSong;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,EAAmBC,UAAnB,EAA+BC,SAA/B,QAAgD,kBAAhD;AACA,SAASC,eAAT,EAA0BC,iBAA1B,QAAmD,mBAAnD;AAEA,SAASC,cAAT,EAAyBC,aAAzB,EAAwCC,aAAxC,QAA6D,kBAA7D;;;;AAGA,SAASC,QAAT,GAAoB;EAAA;;EAChB,MAAMC,WAAW,GAAGV,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACC,OAAN,CAAcC,IAA1B,CAA/B;EAEA,MAAMC,QAAQ,GAAGf,WAAW,EAA5B;EACA,MAAMgB,MAAM,GAAGZ,SAAS,GAAGa,EAA3B;EAEA,MAAMC,IAAI,GAAGjB,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACO,QAAN,CAAeH,MAAf,CAAZ,CAAxB;EAGA,MAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBtB,QAAQ,CAAE,GAAEmB,IAAI,CAACE,KAAM,EAAf,CAAlC;EAEA,MAAME,QAAQ,GAAGrB,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACM,IAAN,CAAWK,QAAvB,CAA5B;EACAC,OAAO,CAACC,GAAR,CAAYH,QAAZ,EAZgB,CAahB;;EAEA,MAAMI,OAAO,GAAGvB,UAAU,EAA1B;EAEA,IAAI,CAACQ,WAAL,EAAkB,oBAAO,QAAC,QAAD;IAAU,EAAE,EAAC;EAAb;IAAA;IAAA;IAAA;EAAA,QAAP;;EAElB,MAAMgB,aAAa,GAAG,MAAOC,CAAP,IAAa;IAC/BA,CAAC,CAACC,cAAF;IACA,MAAMC,IAAI,GAAG;MACTnB;IADS,CAAb;EAIH,CAND;;EAQA,MAAMoB,YAAY,GAAG,MAAOH,CAAP,IAAa;IAC9BA,CAAC,CAACC,cAAF;IAEA,MAAMC,IAAI,GAAG;MACTb,EAAE,EAAEC,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAED,EADD;MAETG;IAFS,CAAb;IAKA,MAAML,QAAQ,CAACV,eAAe,CAACyB,IAAD,CAAhB,CAAd;IACAJ,OAAO,CAACM,IAAR,CAAc,QAAd;EACH,CAVD;;EAYA,MAAMC,YAAY,GAAIf,IAAD,IAAU;IAC3BH,QAAQ,CAACT,iBAAiB,CAACY,IAAD,CAAlB,CAAR;EACH,CAFD;;EAKA,oBACI;IAAA,wBACI;MAAA,wBACI;QAAA,UAAIA,IAAJ,aAAIA,IAAJ,uBAAIA,IAAI,CAAEE;MAAV;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAM,QAAQ,EAAEW,YAAhB;QAAA,wBACI;UACI,IAAI,EAAC,MADT;UAEI,KAAK,EAAEX,KAFX;UAGI,QAAQ,EAAGQ,CAAD,IAAOP,QAAQ,CAACO,CAAC,CAACM,MAAF,CAASC,KAAV;QAH7B;UAAA;UAAA;UAAA;QAAA,QADJ,eAMI;UAAQ,IAAI,EAAC,QAAb;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QANJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ,eAUI;QACA,OAAO,EAAGP,CAAD,IAAOK,YAAY,CAACf,IAAD,CAD5B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAVJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAgBI;MAAA,UACCkB,MAAM,CAACC,MAAP;IADD;MAAA;MAAA;MAAA;IAAA,QAhBJ;EAAA,gBADJ;AAsBH;;GAlEQ3B,Q;UACeT,W,EAEHD,W,EACFI,S,EAEFH,W,EAKIA,W,EAIDE,U;;;KAfXO,Q;AAqET,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}