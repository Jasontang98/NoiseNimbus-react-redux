{"ast":null,"code":"var _jsxFileName = \"/home/jasontang/noiseNimbus/frontend/src/components/SplashPage/Splash.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport TopBox from \"./TopBox/TopBox\";\nimport Trending from \"./Trending\";\nimport { playAllSongs } from \"../../store/songFile\";\nimport { useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Splash = _ref => {\n  _s();\n\n  let {\n    playSong\n  } = _ref;\n  const dispatch = useDispatch();\n  const [isLoaded, setIsLoaded] = useState(false);\n  useEffect(() => {\n    dispatch(playAllSongs()).then(() => setIsLoaded(true));\n  }, dispatch);\n  return isLoaded && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"topLine\",\n    children: [/*#__PURE__*/_jsxDEV(TopBox, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Trending, {\n      playSong: playSong\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Splash, \"7FaKhPZZxVWm0DlFDxQbOLDMlo4=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Splash;\nexport default Splash;\n\nvar _c;\n\n$RefreshReg$(_c, \"Splash\");","map":{"version":3,"names":["React","useEffect","useState","TopBox","Trending","playAllSongs","useDispatch","Splash","playSong","dispatch","isLoaded","setIsLoaded","then"],"sources":["/home/jasontang/noiseNimbus/frontend/src/components/SplashPage/Splash.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport TopBox from \"./TopBox/TopBox\";\nimport Trending from \"./Trending\";\n\nimport { playAllSongs } from \"../../store/songFile\";\nimport { useDispatch } from \"react-redux\";\n\n\nconst Splash = ({playSong}) => {\n    const dispatch = useDispatch();\n    const [isLoaded, setIsLoaded] = useState(false);\n\n    useEffect(() => {\n        dispatch(playAllSongs()).then(() => setIsLoaded(true));\n    }, dispatch)\n\n    return (\n        isLoaded && (\n            <div className=\"topLine\">\n                <TopBox />\n                <Trending playSong={playSong}/>\n                {/* <About */}\n            </div>\n        )\n    )\n\n}\n\nexport default Splash;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,SAASC,YAAT,QAA6B,sBAA7B;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AAGA,MAAMC,MAAM,GAAG,QAAgB;EAAA;;EAAA,IAAf;IAACC;EAAD,CAAe;EAC3B,MAAMC,QAAQ,GAAGH,WAAW,EAA5B;EACA,MAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,KAAD,CAAxC;EAEAD,SAAS,CAAC,MAAM;IACZQ,QAAQ,CAACJ,YAAY,EAAb,CAAR,CAAyBO,IAAzB,CAA8B,MAAMD,WAAW,CAAC,IAAD,CAA/C;EACH,CAFQ,EAENF,QAFM,CAAT;EAIA,OACIC,QAAQ,iBACJ;IAAK,SAAS,EAAC,SAAf;IAAA,wBACI,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI,QAAC,QAAD;MAAU,QAAQ,EAAEF;IAApB;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QAFR;AAUH,CAlBD;;GAAMD,M;UACeD,W;;;KADfC,M;AAoBN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}